/* You can add global styles to this file, and also import other style files */
@use '@angular/material' as mat;
// @use '~@angular/material/theming';
@import 'scss/typography';
@import 'scss/buttons';
@import 'scss/inputs';

// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

$game-primary: mat.define-palette(mat.$indigo-palette);
$game-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$game-warn: mat.define-palette(mat.$red-palette);

$game-theme: mat.define-dark-theme($game-primary, $game-accent, $game-warn);

$light-primary: mat.define-palette(mat.$light-blue-palette);
$light-accent: mat.define-palette(mat.$green-palette);
$light-warn: mat.define-palette(mat.$red-palette);

$light-theme: mat.define-light-theme($light-primary, $light-accent, $light-warn);

@include mat.all-legacy-component-themes($game-theme);


html, body { height: 100%; }
body {
    margin: 0;
}

.content-container {
    margin: 0 20%;
}

.light-robot-theme {
    @include mat.all-legacy-component-themes($light-theme);
}

.hide-eye svg g#eye-stalk {
    display: none;
}

.hide-arm svg g#arm {
    display: none;
}

// @mixin theme-color-grabber($theme) {
//     // Parse the theme and create variables for each color in the pallete
//     $primary: map-get($theme, primary);
//     $accent: map-get($theme, accent);
//     $warn: map-get($theme, warn);
//     // Create theme specfic styles
//     .primaryColorBG {
//       background-color: mat-color($primary);
//     }
//     .accentColorBG {
//       background-color: mat-color($accent);
//     }
//     .warnColorBG {
//       background-color: mat-color($warn);
//     }
//   }

// @mixin theme($property: null, $key: null) {
//     & {
//       #{$property}: mat-color(map_get($game-theme, $key));
//     }
  
//     .light-robot-theme & {
//       #{$property}: mat-color(map_get($light-theme, $key));
//     }
// }